========== tables ==========
// --- GLOBAL TYPEDEFS ---
typedef struct _file_s_0 FILE_0;
// --- FUNCTION DECLARATIONS ---
int main_8(int,char**);
void*memset_0(void*,int,int);
int printf_0(const char*,...);
int scanf_0(const char*,...);
int sprintf_0(char*,const char*,...);
int sscanf_0(const char*,const char*,...);
// --- GLOBAL VARIABLES ---
_Bool gb_3;
int gi_5;
int*gpi_6;
char gx_4;
// --- FUNCTION DEFINITIONS ---
int main_8(int argc_8,char**argv_8){
	int li_11;
	char lx_10;
	_Bool*pgb_13;
	int*pgi_15;
	int**pgpi_16;
	char*pgx_14;
	int**pli_15;
	char**plx_14;
	{
		int j_25;
		int k_25;
		int l_25;
		int m_25;
		int n_25;
	}
	{
		int k_41;
		int l_41;
		int m_41;
		int n_41;
	}
	{
		int j_59;
		int k_59;
		int l_59;
		int m_59;
	}
}
========== IR module ==========
::: ; ModuleID = 'test'
::: source_filename = "test"
::: 
::: @gb = global i1 false
::: @gx = global i8 0
::: @gi = global i32 0
::: @gpi = global i32* null
::: 
::: declare i32 @ckrt_printf(i8*, ...)
::: 
::: declare i32 @ckrt_scanf(i8*, ...)
::: 
::: declare i32 @ckrt_sprintf(i8*, i8*, ...)
::: 
::: declare i32 @ckrt_sscanf(i8*, i8*, ...)
::: 
::: declare i8* @ckrt_memset(i8*, i32, i32)
::: 
::: define i32 @main(i32 %0, i8** %1) {
::: prolog:
:::   %argc = alloca i32
:::   store i32 %0, i32* %argc
:::   %argv = alloca i8**
:::   store i8** %1, i8*** %argv
:::   %lx = alloca i8
:::   %li = alloca i32
:::   %pgb = alloca i1*
:::   %pgx = alloca i8*
:::   %plx = alloca i8**
:::   %pgi = alloca i32*
:::   %pli = alloca i32**
:::   %pgpi = alloca i32**
:::   %j = alloca i32
:::   %k = alloca i32
:::   %l = alloca i32
:::   %m = alloca i32
:::   %n = alloca i32
:::   %k1 = alloca i32
:::   %l2 = alloca i32
:::   %m3 = alloca i32
:::   %n4 = alloca i32
:::   %j5 = alloca i32
:::   %k6 = alloca i32
:::   %l7 = alloca i32
:::   %m8 = alloca i32
:::   br label %start
::: 
::: start:                                            ; preds = %prolog
::: }
========== Error constructing function ==========
========== cecko4 done ==========
